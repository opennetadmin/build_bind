#!/bin/bash
#
# build_bind.sh -- v1.6
#
# Written by: Matt Pascoe <matt@opennetadmin.com>
# Edited by:  Jan Dennis Bungart <jayd@foundationu.com>
#
# License:
#  build_bind.sh (hereafter referred to as "program") is free software;
#  you can redistribute it and/or modify it under the terms of the GNU General
#  Public License as published by the Free Software Foundation; either version
#  2 of the License, or (at your option) any later version.
#  Note that when redistributing modified versions of this source code, you
#  must ensure that this disclaimer and the above coder's names are included
#  VERBATIM in the modified code.
# 
# Disclaimer:
#  This program is provided with no warranty of any kind, either expressed or
#  implied.  It is the responsibility of the user (you) to fully research and
#  comprehend the usage of this program.  As with any tool, it can be misused,
#  either intentionally (you're a vandal) or unintentionally (you're a moron).
#  THE AUTHOR(S) IS(ARE) NOT RESPONSIBLE FOR ANYTHING YOU DO WITH THIS PROGRAM
#  or anything that happens because of your use (or misuse) of this program,
#  including but not limited to anything you, your lawyers, or anyone else
#  can dream up.  And now, a relevant quote directly from the GPL:
# 
# NO WARRANTY
# 
#  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY
#  FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN
#  OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES
#  PROVIDE THE PROGRAM "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED
#  OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS
#  TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE
#  PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,
#  REPAIR OR CORRECTION.
# 
# The GNU GPL can be found at http://www.fsf.org/copyleft/gpl.html
# 
# -----------------------------------------------------------------------
# Description
# Subversion info: $Id: build_bind 95 2012-01-15 03:56:43Z matt $
#
#
# THIS IS A REFERENCE DESIGN BUILD SCRIPT, IT WORKS FOR ME BUT MAY NOT FOR YOU
# IT IS INTENDED TO GIVE AN EXAMPLE OF HOW A SCRIPT LIKE THIS COULD BE BUILT.  IF IT WORKS
# FOR YOU, GREAT!  IF NOT THEN MAKE WHATEVER ADJUSTMENTS TO IT YOU NEED TO GET IT WORKING!
# ASK FOR HELP IN THE FORUMS IF NEEDED.
#
#
# REQUIRES: dcm.pl, build_bind_server_domain_list module, build_bind_domain module and 
# build_bind_conf module, working rndc for the local server.
#
# Since this script must restart the named daemon, it should be ran as the bind user or as root.
#
# dcm.pl should be working on your system and either in your path or you will need
# to put the full path to it in the DCM_PATH variable below.
#
# The tools rndc and named-checkconf must be in your path as well.
#
# Remember that the checks done by named-checkconf are only syntax checks.  They will not
# ensure that the content of your files is correct. If you have missing records or 
# incorrect data it could impact your environment or the functionality of other domain servers.
# It is recomended that you run a BIND server under ONA control as a hidden master, then
# slave other dns servers off of it that would service your end users.  This helps protect
# against failures during build time causing outages for end users.
#
# By default the local host name is determined using "hostname -f" but can also 
# be specified with the -s option. The server name must match the FQDN of the server 
# in ONA.  It must be the PRIMARY name, not an CNAME or alternate A record.
#
# For ease of use, it is recommended to add /opt/ona/bin to your $PATH environment variable
#
# Add the following line to your system named.conf file. Probably in /etc/bind/named.conf
# or named.conf.local depending on your system. The placement of this line could vary
# depending on how your distro organizes named.  named.conf.local should be used for
# ubuntu/debian based systems.
#
#     include "/opt/ona/etc/bind/named.conf.ona";
#
# You will need to execute the following dcm commands to automatically create the appropriate module entries:
#
# NOTE: this script was developed and tested on an ubuntu box.  Your mileage may vary on other distros.
# NOTE: On my ubuntu box I had to modify the apparmor configuration in 
#       /etc/apparmor.d/usr.sbin.named to include "/opt/ona/etc/bind/** r,"
# NOTE: to view example configs in the GUI you need to set build_dns_type to "bind" in the sys_config table
#
# -----------------------------------------------------------------------

[ ! -r /etc/onabase ] && echo "[$0] ERROR: Unable to read /etc/onabase." && exit 1
ONABASE=$(cat /etc/onabase)

# define path to local configuration file and inform if it's not present
LOCALCONF="${ONABASE}/etc/build_bind.conf"
[ ! -r ${LOCALCONF} ] && echo "[$0] NOTICE: Local config file ${LOCALCONF} absent, exiting." && exit 1

#### Process the commandline options
USAGE="
Usage: $(basename $0) [-c] [-s <FQDN>] [-b] [-t] [-d]

  -c     Specify the absolute path to a custom config file
  -s     FQDN of the server you wish to build BIND configs for
  -b     Enable batch mode (less verbose logging for scripted runs)
  -t     Enable download of domain specific footers from a web server
  -d     Enable debug output
"

# include a default configuration file if present to prevent settings from being
# overwritten whenever the build_bind script is being updated
[ ! -r "${LOCALCONF}" ] || source "${LOCALCONF}"

while getopts "c:s:btd" options; do
  case $options in
    c ) LOCALCONF1=$OPTARG;;
    s ) SRV_FQDN=$OPTARG;;
    b ) BATCHMODE=1;;
    t ) FOOTERS=1;;
    d ) DEBUGON=1;;
    \? ) echo "$USAGE"
         exit 1;;
    * ) echo "$USAGE"
         exit 1;;
  esac
done

# include a local configuration file if present to prevent settings from being
# overwritten whenever the build_bind script is being updated
[ ! -r "${LOCALCONF1}" ] || source "${LOCALCONF1}"

# This will log a message in a standardized way
# Its job is simple.. take the message that was passed in and log it via some mechanism.
# Currently, it echos to stdout and logs in syslog
function ONA_LOG {
    # Log it to the screen
    [ $BATCHMODE ] || echo $(date +'%h %d %H:%M:%S') [ONA:$(basename $0)]: "$1"

    # log it to syslog
    logger -t [ONA:$(basename $0)] "$1"
}

# This function will exit with a status of 1 and if in batch mode, will print a success/fail message
function MAIL_ALERT {
    [ $BATCHMODE ] && echo FAILURE
    # send an email notification
    sendEmail -s $MAIL_SERVER -f $MAIL_FROM -t $MAIL_TO \
              -u "[ONA:$(basename $0)] $SRV_FQDN: Failure during BIND rebuild." \
              -m "The BIND server '${SRV_FQDN}' has encountered an error during its last rebuild, please check the status of the server.  To investigate further you can execute the following command on the server: ${CHECKCOMMAND}"
    if [ $? -ne 0 ]
    then
        ONA_LOG "ERROR => There was an issue sending the notification email."
    fi
    exit 1
}

# Check if the $ONA_PATH directory exists
if ! test -d $ONA_PATH/zone_data
then
    ONA_LOG "ERROR => Unable to find directory '${ONA_PATH}/zone_data', please create it."
    MAIL_ALERT
fi

# Check if $FOOTER_PATH directory exists
if ! test -d $FOOTER_PATH
then
    ONA_LOG "ERROR => Unable to find directory '${FOOTER_PATH}', please create it."
    MAIL_ALERT
fi

[ $BATCHMODE ] || ONA_LOG "INFO => Building BIND DNS config for ${SRV_FQDN}..."

# Lets get a list of domains for this server from the database
#DOMAIN_LIST=$($DCM_PATH -r build_bind_server_domain_list server=$SRV_FQDN) || abend "Unable to determine domain list for server named $SRV_FQDN."
if ! DOMAIN_LIST=$($DCM_PATH -r build_bind_server_domain_list server=$SRV_FQDN)
then 
    ONA_LOG "ERROR => Unable to determine domain list for server named ${SRV_FQDN}."
    MAIL_ALERT
fi

# build the named.conf.ona file
# Note, I cut the first / off due to the DCM issue with paths
if ! $DCM_PATH -r build_bind_conf path=$(echo $ONA_PATH|cut -c2-60)/zone_data server=$SRV_FQDN > $ONA_PATH/named.conf.ona
then
    ONA_LOG "ERROR => Unable to build bind config file."
    MAIL_ALERT
fi

# loop through list of domains and build the zone file
for DOMAIN in $(echo $DOMAIN_LIST)
do
    if ! $DCM_PATH -r build_bind_domain domain=$DOMAIN > $ONA_PATH/zone_data/named-$DOMAIN 
    then
        ONA_LOG "ERROR => Unable to build zonefile: named-${DOMAIN}."
        MAIL_ALERT
    fi
done

# check if fetching remote footers was requested
if [ -n "${FOOTERS}" ]
then

[ $BATCHMODE ] || ONA_LOG "INFO => Scanning for footers on remote server ..."

# create a folder used to temporarily store the footers
FOOTER_TMPDIR="$(mktemp -d)"

# loop through list of domains and attach remote footers to local zone files
for DOMAIN in $(echo $DOMAIN_LIST)
do
    $CURL_PATH -s --fail --output "${FOOTER_TMPDIR}/${DOMAIN}.footer" "${FOOTER_URL}/${DOMAIN}.footer"
    if [ $? == 0 ]
	then
	ONA_LOG "INFO => Found a match for zone ${DOMAIN}.. appending."
	# attach footer to local zone file
	cat $FOOTER_TMPDIR/$DOMAIN.footer >> $ONA_PATH/zone_data/named-$DOMAIN
    fi
done

# safely remove footers and temp folder
rm -rf ${FOOTER_TMPDIR}/*footer
rmdir ${FOOTER_TMPDIR}

fi

[ $BATCHMODE ] || ONA_LOG "INFO => Testing new config files for SYNTAX only..."

# Test that our new config is syntacticaly correct
# this assumes named-checkconf is in your path and that you are using the standard named.conf file path of /etc/bind/named.conf
if ! $CHECKCOMMAND
then
    ONA_LOG "ERROR => The resulting config files contain one or more syntax errors."
    MAIL_ALERT
fi

# refresh the bind nameserver
# there are a few ways to do this.. RNDC is probably "best" but not everyone has that configured so a SIGHUP should do the trick as well
# also RNDC could use a reconfig or a reload.  for now I'm going for a full reload.. if it is a HUGE server, reconfig might be better.
# though for now I'm rebuilding all the zones anyway.
#
# Or a simple /etc/init.d/bind9 reload would work
if ! $SYSTEMINIT
then
    ONA_LOG "ERROR => Unable to reload the named daemon using the command ${SYSTEMINIT}."
    MAIL_ALERT
fi

[ $BATCHMODE ] || ONA_LOG "INFO => Completed BIND configuration extraction and daemon reload."
